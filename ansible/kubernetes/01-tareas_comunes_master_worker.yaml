- name: Tareas comunes a realizar en el nodo master y los workers
  hosts: master,worker
  become: yes
  tasks:
    - name: Validar fichero hosts
      shell: grep -c "10.0.1." /etc/hosts || true
      register: file_hosts

    # - debug:
    #     msg: fichero hosts validado = {{ file_hosts.stdout }}

    - name: Configuration DNS Servers
      blockinfile:
        path: /etc/hosts
        insertafter: EOF
        marker: ''
        block: |
          {{ item.ip }} {{ item.name }}
      loop:
        - { name: master, ip: '10.0.1.10' }
        - { name: worker01, ip: '10.0.1.12' }
        - { name: worker02, ip: '10.0.1.13' }
        - { name: nfs, ip: '10.0.1.11' }
      when: file_hosts.stdout == "0"

    - name: Activar transparent masquerading - br_netfilter
      modprobe:
        name: br_netfilter
        state: present

    - name: Activar transparent masquerading - Habilitar el Firewall
      systemd:
        name: firewalld
        enabled: yes
        state: started

    - name: Activar transparent masquerading - Configurar Firewall
      firewalld:
        masquerade: yes
        state: enabled
        permanent: yes
        immediate: yes

    # - name: Activar transparent masquerading - Reiniciar el Firewall
    #   systemd:
    #     name: firewalld
    #     state: reloaded

    - name: Habilitar trafico cortafuegos - Crear el fichero k8s.conf
      file:
        path: /etc/sysctl.d/k8s.conf
        state: touch

    - name: Validar fichero k8s.conf
      shell: grep -c "net.bridge.bridge-nf-call-ip" /etc/hosts || true
      register: file_k8s

    # - debug:
    #     msg: fichero k8s.conf validado = {{ file_k8s.stdout }}

    - name: Habilitar trafico cortafuegos - Write k8s.conf
      blockinfile:
        path: /etc/sysctl.d/k8s.conf
        insertafter: EOF
        marker: ''
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
      when: file_k8s.stdout == "0"

    - name: Habilitar trafico cortafuegos - Reload sysctl
      shell: sysctl --system

    - name: Desactivar Swap
      shell: swapoff -a

    - name: Eliminar linea de arranque swap del fichero /etc/fstab/
      shell: sed -i '/swap/d' /etc/fstab
      args:
        warn: false

    - name: Docker - Agregar repositorio
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo

    - name: Docker - Instalar
      dnf:
        name:
          - docker-ce-19.03.14-3.el8
          - containerd.io
        state: present

    # - name: Docker - Instalar
    #   dnf:
    #     name:
    #       - 'https://download.docker.com/linux/centos/8/x86_64/stable/Packages/docker-ce-cli-19.03.14-3.el8.x86_64.rpm'
    #       - containerd.io
    #     state: present

    # - name: Docker - Agregar repositorio
    #   shell: dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

    # - name: Docker - Instalar
    #   shell: dnf install docker-ce-19.03.14-3.el8 containerd.io -y

    - name: Docker - Habilitar y arrancar el servicio
      systemd:
        name: docker
        daemon_reload: yes
        enabled: yes
        state: started

    - name: Kubernetes - Crear el fichero kubernetes.repo
      file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch

    - name: Validar fichero kubernetes.repo
      shell: grep -c "[kubernetes]" /etc/yum.repos.d/kubernetes.repo || true
      register: file_kubernetes_repo

    # - debug:
    #     msg: fichero kubernetes.repo validado = {{ file_kubernetes_repo.stdout }}

    - name: Kubernetes - Configurar kubernetes.repo
      blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        insertafter: EOF
        marker: ''
        block: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          exclude=kubelet kubeadm kubectl
      when: file_kubernetes_repo.stdout == "0"

    - name: Kubernetes -  Install Binaries
      dnf:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes
        disable_excludes: kubernetes

    - name: Kubernetes - Habilitar y arrancar Kubelet
      systemd:
        name: kubelet
        daemon_reload: yes
        state: started
        enabled: yes